import{_ as s,c as a,a as e,o as p}from"./app-CEvnTgAb.js";const l={};function i(t,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="python-控制流-条件语句与循环结构" tabindex="-1"><a class="header-anchor" href="#python-控制流-条件语句与循环结构"><span>Python 控制流：条件语句与循环结构</span></a></h1><h2 id="一、条件语句" tabindex="-1"><a class="header-anchor" href="#一、条件语句"><span>一、条件语句</span></a></h2><h3 id="一-if-语句" tabindex="-1"><a class="header-anchor" href="#一-if-语句"><span>（一）if 语句</span></a></h3><ol><li><strong>基本语法</strong></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">if</span> condition<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当条件为真时执行的代码块</span></span>
<span class="line">    statement1</span>
<span class="line">    statement2</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>condition</code> 是一个布尔表达式，若结果为 <code>True</code>，则执行缩进的代码块；若为 <code>False</code>，则跳过该代码块。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你已成年&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>代码块缩进</strong> 在 Python 中，代码块通过缩进来表示。通常使用 4 个空格作为一个缩进层级。同一个代码块内的语句必须保持相同的缩进。</li></ol><h3 id="二-if-else-语句" tabindex="-1"><a class="header-anchor" href="#二-if-else-语句"><span>（二）if - else 语句</span></a></h3><ol><li><strong>基本语法</strong></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">if</span> condition<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当条件为真时执行的代码块</span></span>
<span class="line">    statement1</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当条件为假时执行的代码块</span></span>
<span class="line">    statement2</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">15</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你已成年&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你未成年&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-if-elif-else-语句" tabindex="-1"><a class="header-anchor" href="#三-if-elif-else-语句"><span>（三）if - elif - else 语句</span></a></h3><ol><li><strong>基本语法</strong></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">if</span> condition1<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当 condition1 为真时执行的代码块</span></span>
<span class="line">    statement1</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">elif</span> condition2<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当 condition1 为假且 condition2 为真时执行的代码块</span></span>
<span class="line">    statement2</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">elif</span> condition3<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当 condition1 和 condition2 为假且 condition3 为真时执行的代码块</span></span>
<span class="line">    statement3</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当所有条件都为假时执行的代码块</span></span>
<span class="line">    statement4</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">score <span class="token operator">=</span> <span class="token number">85</span></span>
<span class="line"><span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;优秀&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">80</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;良好&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;及格&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不及格&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>多个 elif 的使用</strong> 可以根据需要添加多个 <code>elif</code> 分支，Python 会依次检查每个条件，一旦某个条件为 <code>True</code>，则执行对应的代码块，并跳过后续的 <code>elif</code> 和 <code>else</code> 分支。</li></ol><h3 id="四-嵌套条件语句" tabindex="-1"><a class="header-anchor" href="#四-嵌套条件语句"><span>（四）嵌套条件语句</span></a></h3><ol><li><strong>基本概念</strong> 条件语句可以嵌套使用，即在一个条件语句的代码块中再包含另一个条件语句。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">20</span></span>
<span class="line">gender <span class="token operator">=</span> <span class="token string">&quot;女&quot;</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> gender <span class="token operator">==</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;成年男性&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;成年女性&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> gender <span class="token operator">==</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;未成年男性&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;未成年女性&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、循环结构" tabindex="-1"><a class="header-anchor" href="#二、循环结构"><span>二、循环结构</span></a></h2><h3 id="一-while-循环" tabindex="-1"><a class="header-anchor" href="#一-while-循环"><span>（一）while 循环</span></a></h3><ol><li><strong>基本语法</strong></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">while</span> condition<span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 当条件为真时重复执行的代码块</span></span>
<span class="line">    statement1</span>
<span class="line">    statement2</span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">count <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span></span>
<span class="line">    count <span class="token operator">=</span> count <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>循环控制变量的更新</strong> 在 <code>while</code> 循环中，需要确保循环控制变量（如上述的 <code>count</code>）在循环体中被更新，否则可能会导致无限循环。</li><li><strong>无限循环</strong> 若 <code>condition</code> 始终为 <code>True</code>，则会形成无限循环。可以使用 <code>Ctrl + C</code>（在命令行中）或适当的条件判断和 <code>break</code> 语句来终止无限循环。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 示例无限循环</span></span>
<span class="line"><span class="token comment"># while True:</span></span>
<span class="line"><span class="token comment">#     print(&quot;这是一个无限循环&quot;)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-for-循环" tabindex="-1"><a class="header-anchor" href="#二-for-循环"><span>（二）for 循环</span></a></h3><ol><li><strong>遍历序列（列表、元组、字符串等）</strong></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> element <span class="token keyword">in</span> my_list<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">my_string <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span></span>
<span class="line"><span class="token keyword">for</span> char <span class="token keyword">in</span> my_string<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>使用 range() 函数</strong><code>range()</code> 函数用于生成一个整数序列，常用于 <code>for</code> 循环中控制循环次数。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 生成 0 到 4 的整数序列</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成 2 到 6（不包含 6）的整数序列</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成 2 到 10（不包含 10），步长为 2 的整数序列</span></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>嵌套 for 循环</strong><code>for</code> 循环也可以嵌套使用，用于处理多维数据结构。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">matrix <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> row <span class="token keyword">in</span> matrix<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> element <span class="token keyword">in</span> row<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-循环控制语句" tabindex="-1"><a class="header-anchor" href="#三-循环控制语句"><span>（三）循环控制语句</span></a></h3><ol><li><strong>break 语句</strong><code>break</code> 语句用于立即终止当前所在的循环，跳出循环体。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>continue 语句</strong><code>continue</code> 语句用于跳过当前循环的剩余部分，直接开始下一次循环。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">continue</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>else 子句</strong> 在 <code>for</code> 和 <code>while</code> 循环后可以使用 <code>else</code> 子句，当循环正常结束（没有被 <code>break</code> 语句终止）时，会执行 <code>else</code> 子句中的代码。</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;循环正常结束&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42)]))}const c=s(l,[["render",i]]),r=JSON.parse('{"path":"/tech/py/3.html","title":"Python 控制流：条件语句与循环结构","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、条件语句","slug":"一、条件语句","link":"#一、条件语句","children":[{"level":3,"title":"（一）if 语句","slug":"一-if-语句","link":"#一-if-语句","children":[]},{"level":3,"title":"（二）if - else 语句","slug":"二-if-else-语句","link":"#二-if-else-语句","children":[]},{"level":3,"title":"（三）if - elif - else 语句","slug":"三-if-elif-else-语句","link":"#三-if-elif-else-语句","children":[]},{"level":3,"title":"（四）嵌套条件语句","slug":"四-嵌套条件语句","link":"#四-嵌套条件语句","children":[]}]},{"level":2,"title":"二、循环结构","slug":"二、循环结构","link":"#二、循环结构","children":[{"level":3,"title":"（一）while 循环","slug":"一-while-循环","link":"#一-while-循环","children":[]},{"level":3,"title":"（二）for 循环","slug":"二-for-循环","link":"#二-for-循环","children":[]},{"level":3,"title":"（三）循环控制语句","slug":"三-循环控制语句","link":"#三-循环控制语句","children":[]}]}],"git":{},"filePathRelative":"tech/py/3.md"}');export{c as comp,r as data};
