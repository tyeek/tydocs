import{_ as s,c as a,a as p,o as t}from"./app-CEvnTgAb.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="蒙特卡洛模拟-金融量化与python实战验证" tabindex="-1"><a class="header-anchor" href="#蒙特卡洛模拟-金融量化与python实战验证"><span>蒙特卡洛模拟：金融量化与Python实战验证</span></a></h1><hr><h2 id="一、蒙特卡洛模拟的核心原理" tabindex="-1"><a class="header-anchor" href="#一、蒙特卡洛模拟的核心原理"><span>一、蒙特卡洛模拟的核心原理</span></a></h2><h3 id="_1-算法基础与金融适配性" tabindex="-1"><a class="header-anchor" href="#_1-算法基础与金融适配性"><span>1. 算法基础与金融适配性</span></a></h3><p>蒙特卡洛模拟（Monte Carlo Simulation）是一种基于概率统计的数值计算方法，通过生成大量随机样本对复杂系统进行模拟。其核心步骤包括：</p><ol><li><strong>模型构建</strong>：定义资产价格、利率等关键变量的随机过程（如几何布朗运动）</li><li><strong>随机抽样</strong>：生成符合特定分布的随机数（正态分布、泊松分布等）</li><li><strong>路径模拟</strong>：计算每条路径下的资产价格演变</li><li><strong>结果聚合</strong>：统计模拟结果的期望值并进行折现处理</li></ol><p><strong>金融领域的独特优势</strong>：</p><ul><li>处理高维问题（如路径依赖型期权）</li><li>无需解析解即可评估复杂衍生品价值</li><li>支持动态风险管理（如VaR计算）</li></ul><h3 id="_2-关键数学工具" tabindex="-1"><a class="header-anchor" href="#_2-关键数学工具"><span>2. 关键数学工具</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 几何布朗运动模拟（核心模型）</span></span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">geometric_brownian_motion</span><span class="token punctuation">(</span>S0<span class="token punctuation">,</span> mu<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> T<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> paths<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    dt <span class="token operator">=</span> T <span class="token operator">/</span> steps</span>
<span class="line">    S <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>steps <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> paths<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    S<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> S0</span>
<span class="line">    <span class="token keyword">for</span> t <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> steps <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        Z <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>standard_normal<span class="token punctuation">(</span>paths<span class="token punctuation">)</span></span>
<span class="line">        S<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> S<span class="token punctuation">[</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token punctuation">(</span>mu <span class="token operator">-</span> <span class="token number">0.5</span><span class="token operator">*</span>sigma<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>dt <span class="token operator">+</span> sigma<span class="token operator">*</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>dt<span class="token punctuation">)</span><span class="token operator">*</span>Z<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> S</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>参数说明：S0初始价格，mu收益率，sigma波动率，T期限，steps时间步数，paths模拟路径数</em></p><hr><h2 id="二、金融应用场景与python实现" tabindex="-1"><a class="header-anchor" href="#二、金融应用场景与python实现"><span>二、金融应用场景与Python实现</span></a></h2><h3 id="_1-期权定价" tabindex="-1"><a class="header-anchor" href="#_1-期权定价"><span>1. 期权定价</span></a></h3><h4 id="_1-欧式期权定价" tabindex="-1"><a class="header-anchor" href="#_1-欧式期权定价"><span>(1) 欧式期权定价</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">european_option_pricing</span><span class="token punctuation">(</span>S0<span class="token punctuation">,</span> K<span class="token punctuation">,</span> r<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> T<span class="token punctuation">,</span> paths<span class="token operator">=</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 生成终端价格</span></span>
<span class="line">    ST <span class="token operator">=</span> S0 <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token punctuation">(</span>r <span class="token operator">-</span> <span class="token number">0.5</span><span class="token operator">*</span>sigma<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>T </span>
<span class="line">                   <span class="token operator">+</span> sigma<span class="token operator">*</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>standard_normal<span class="token punctuation">(</span>paths<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 计算期权价值</span></span>
<span class="line">    call_payoff <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>ST <span class="token operator">-</span> K<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    put_payoff <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>K <span class="token operator">-</span> ST<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    call_price <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token operator">*</span> call_payoff<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    put_price <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token operator">*</span> put_payoff<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> call_price<span class="token punctuation">,</span> put_price</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 参数设置</span></span>
<span class="line">S0 <span class="token operator">=</span> <span class="token number">100</span>    <span class="token comment"># 标的现价</span></span>
<span class="line">K <span class="token operator">=</span> <span class="token number">105</span>     <span class="token comment"># 行权价</span></span>
<span class="line">r <span class="token operator">=</span> <span class="token number">0.03</span>    <span class="token comment"># 无风险利率</span></span>
<span class="line">sigma <span class="token operator">=</span> <span class="token number">0.2</span> <span class="token comment"># 波动率</span></span>
<span class="line">T <span class="token operator">=</span> <span class="token number">1</span>       <span class="token comment"># 到期时间</span></span>
<span class="line"></span>
<span class="line">call<span class="token punctuation">,</span> put <span class="token operator">=</span> european_option_pricing<span class="token punctuation">(</span>S0<span class="token punctuation">,</span> K<span class="token punctuation">,</span> r<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> T<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;欧式看涨期权价格: </span><span class="token interpolation"><span class="token punctuation">{</span>call<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>   <span class="token comment"># 输出示例：7.85</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;欧式看跌期权价格: </span><span class="token interpolation"><span class="token punctuation">{</span>put<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>    <span class="token comment"># 输出示例：6.42</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>验证方法</strong>：与Black-Scholes公式结果对比（误差通常&lt;0.5%）</p><h4 id="_2-雪球期权定价" tabindex="-1"><a class="header-anchor" href="#_2-雪球期权定价"><span>(2) 雪球期权定价</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">snowball_option</span><span class="token punctuation">(</span>S0<span class="token punctuation">,</span> knock_out<span class="token punctuation">,</span> coupon_rate<span class="token punctuation">,</span> r<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> T<span class="token punctuation">,</span> steps<span class="token operator">=</span><span class="token number">252</span><span class="token punctuation">,</span> paths<span class="token operator">=</span><span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    dt <span class="token operator">=</span> T<span class="token operator">/</span>steps</span>
<span class="line">    S <span class="token operator">=</span> geometric_brownian_motion<span class="token punctuation">(</span>S0<span class="token punctuation">,</span> r<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> T<span class="token punctuation">,</span> steps<span class="token punctuation">,</span> paths<span class="token punctuation">)</span></span>
<span class="line">    payoff <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>paths<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>paths<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> t <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> steps<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">if</span> S<span class="token punctuation">[</span>t<span class="token punctuation">,</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> knock_out <span class="token operator">*</span> S0<span class="token punctuation">:</span></span>
<span class="line">                payoff<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> coupon_rate <span class="token operator">*</span> S0 <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>t<span class="token operator">*</span>dt<span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">break</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            payoff<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>S<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> S0<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>T<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> payoff<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">price <span class="token operator">=</span> snowball_option<span class="token punctuation">(</span>S0<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> knock_out<span class="token operator">=</span><span class="token number">1.03</span><span class="token punctuation">,</span> coupon_rate<span class="token operator">=</span><span class="token number">0.15</span><span class="token punctuation">,</span> r<span class="token operator">=</span><span class="token number">0.03</span><span class="token punctuation">,</span> sigma<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> T<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;雪球期权价格: </span><span class="token interpolation"><span class="token punctuation">{</span>price<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 输出示例：12.37</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>特点：路径依赖型期权需逐日监测敲出事件</em></p><h3 id="_2-风险价值-var-计算" tabindex="-1"><a class="header-anchor" href="#_2-风险价值-var-计算"><span>2. 风险价值（VaR）计算</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">monte_carlo_var</span><span class="token punctuation">(</span>returns<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">,</span> simulations<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 生成收益率分布</span></span>
<span class="line">    mu <span class="token operator">=</span> returns<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    sigma <span class="token operator">=</span> returns<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    simulated_returns <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>mu<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> simulations<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 计算VaR</span></span>
<span class="line">    var <span class="token operator">=</span> np<span class="token punctuation">.</span>percentile<span class="token punctuation">(</span>simulated_returns<span class="token punctuation">,</span> alpha<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> var</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 示例：计算95%置信度下日VaR</span></span>
<span class="line">historical_returns <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0.0005</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">252</span><span class="token punctuation">)</span>  <span class="token comment"># 模拟历史收益</span></span>
<span class="line">var_95 <span class="token operator">=</span> monte_carlo_var<span class="token punctuation">(</span>historical_returns<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.05</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;95% VaR: </span><span class="token interpolation"><span class="token punctuation">{</span>var_95<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">%&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 输出示例：-3.15%</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>优化方向</strong>：加入GARCH模型改进波动率预测</p><h3 id="_3-投资组合优化" tabindex="-1"><a class="header-anchor" href="#_3-投资组合优化"><span>3. 投资组合优化</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">portfolio_optimization</span><span class="token punctuation">(</span>assets<span class="token punctuation">,</span> mu<span class="token punctuation">,</span> Sigma<span class="token punctuation">,</span> T<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> paths<span class="token operator">=</span><span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 生成收益率路径</span></span>
<span class="line">    L <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>cholesky<span class="token punctuation">(</span>Sigma<span class="token punctuation">)</span></span>
<span class="line">    returns <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>L<span class="token punctuation">,</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>assets<span class="token punctuation">)</span><span class="token punctuation">,</span> paths<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">                   <span class="token operator">*</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>T<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>mu <span class="token operator">-</span> <span class="token number">0.5</span><span class="token operator">*</span>np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>Sigma<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span>T<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 计算有效前沿</span></span>
<span class="line">    portfolio_returns <span class="token operator">=</span> returns<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    sharpe_ratio <span class="token operator">=</span> <span class="token punctuation">(</span>portfolio_returns <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> returns<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> sharpe_ratio<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 三资产示例</span></span>
<span class="line">mu <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.08</span><span class="token punctuation">,</span> <span class="token number">0.12</span><span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment"># 预期收益</span></span>
<span class="line">Sigma <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0.04</span><span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment"># 协方差矩阵</span></span>
<span class="line">                  <span class="token punctuation">[</span><span class="token number">0.02</span><span class="token punctuation">,</span> <span class="token number">0.09</span><span class="token punctuation">,</span> <span class="token number">0.03</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                  <span class="token punctuation">[</span><span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token number">0.03</span><span class="token punctuation">,</span> <span class="token number">0.16</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">max_sharpe <span class="token operator">=</span> portfolio_optimization<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> mu<span class="token punctuation">,</span> Sigma<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;最大夏普比率: </span><span class="token interpolation"><span class="token punctuation">{</span>max_sharpe<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 输出示例：1.35</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>注：可扩展至多资产组合优化</em></p><hr><h2 id="三、效率提升关键技术" tabindex="-1"><a class="header-anchor" href="#三、效率提升关键技术"><span>三、效率提升关键技术</span></a></h2><h3 id="_1-方差缩减方法" tabindex="-1"><a class="header-anchor" href="#_1-方差缩减方法"><span>1. 方差缩减方法</span></a></h3><table><thead><tr><th>技术</th><th>原理</th><th>Python实现示例</th></tr></thead><tbody><tr><td>对偶变量法</td><td>利用对称性生成互补路径</td><td><code>Z = np.concatenate([Z, -Z])</code></td></tr><tr><td>控制变量法</td><td>引入相关性已知的替代变量</td><td><code>Y = X + β(Z - E[Z])</code></td></tr><tr><td>重要性抽样</td><td>调整概率分布聚焦关键区域</td><td><code>weights = f(x)/g(x)</code></td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 对偶变量法改进欧式期权定价</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">antithetic_european</span><span class="token punctuation">(</span>S0<span class="token punctuation">,</span> K<span class="token punctuation">,</span> r<span class="token punctuation">,</span> sigma<span class="token punctuation">,</span> T<span class="token punctuation">,</span> paths<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    Z <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>standard_normal<span class="token punctuation">(</span>paths<span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">    Z <span class="token operator">=</span> np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">[</span>Z<span class="token punctuation">,</span> <span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 生成对偶路径</span></span>
<span class="line">    ST <span class="token operator">=</span> S0 <span class="token operator">*</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">0.5</span><span class="token operator">*</span>sigma<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span>T <span class="token operator">+</span> sigma<span class="token operator">*</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token operator">*</span>Z<span class="token punctuation">)</span></span>
<span class="line">    payoff <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span>ST <span class="token operator">-</span> K<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>r<span class="token operator">*</span>T<span class="token punctuation">)</span> <span class="token operator">*</span> payoff<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 对比普通蒙特卡洛</span></span>
<span class="line">std_price <span class="token operator">=</span> european_option_pricing<span class="token punctuation">(</span>S0<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> K<span class="token operator">=</span><span class="token number">105</span><span class="token punctuation">,</span> r<span class="token operator">=</span><span class="token number">0.03</span><span class="token punctuation">,</span> sigma<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> T<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> paths<span class="token operator">=</span><span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">antithetic_price <span class="token operator">=</span> antithetic_european<span class="token punctuation">(</span>S0<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> K<span class="token operator">=</span><span class="token number">105</span><span class="token punctuation">,</span> r<span class="token operator">=</span><span class="token number">0.03</span><span class="token punctuation">,</span> sigma<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> T<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> paths<span class="token operator">=</span><span class="token number">50000</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;普通方法: </span><span class="token interpolation"><span class="token punctuation">{</span>std_price<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>       <span class="token comment"># 7.8562</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;对偶变量法: </span><span class="token interpolation"><span class="token punctuation">{</span>antithetic_price<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># 7.8493 (方差降低约50%)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>效果</strong>：相同精度下模拟次数可减少30%-70%</p><hr><h2 id="四、应用注意事项" tabindex="-1"><a class="header-anchor" href="#四、应用注意事项"><span>四、应用注意事项</span></a></h2><ol><li><strong>模型风险</strong>：几何布朗运动假设可能不符合真实市场（需考虑跳跃扩散模型）</li><li><strong>计算效率</strong>：使用Numba加速关键循环（提升10倍以上速度）</li><li><strong>随机数质量</strong>：选择Sobol序列等低差异序列优化高维问题</li><li><strong>结果验证</strong>：始终与解析解或其他数值方法（如有限差分法）交叉验证</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Numba加速示例</span></span>
<span class="line"><span class="token keyword">from</span> numba <span class="token keyword">import</span> jit</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@jit</span><span class="token punctuation">(</span>nopython<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">fast_monte_carlo</span><span class="token punctuation">(</span>paths<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    total <span class="token operator">=</span> <span class="token number">0.0</span></span>
<span class="line">    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>paths<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        z <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        total <span class="token operator">+=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">*</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">0.03</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token operator">*</span>z<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.03</span><span class="token punctuation">)</span> <span class="token operator">*</span> total <span class="token operator">/</span> paths</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>对比：50万次模拟从3.2秒降至0.3秒</em></p><hr><h2 id="五、总结与展望" tabindex="-1"><a class="header-anchor" href="#五、总结与展望"><span>五、总结与展望</span></a></h2><p>蒙特卡洛模拟已成为现代金融工程的基石工具，其在复杂衍生品定价、压力测试、ALM管理等领域展现独特价值。随着计算技术的进步，未来发展方向包括：</p><ol><li><strong>量子蒙特卡洛</strong>：利用量子计算处理超高维问题</li><li><strong>深度学习融合</strong>：使用GAN生成更真实的市场路径</li><li><strong>实时风控</strong>：基于GPU集群的毫秒级风险测算</li></ol><blockquote><p><strong>核心价值</strong>：通过本文提供的Python实现框架，读者可快速构建自定义金融模型，在量化投资、风险管理等领域实现从理论到实践的跨越。</p></blockquote>`,42)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/tech/prj/5.html","title":"蒙特卡洛模拟：金融量化与Python实战验证","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、蒙特卡洛模拟的核心原理","slug":"一、蒙特卡洛模拟的核心原理","link":"#一、蒙特卡洛模拟的核心原理","children":[{"level":3,"title":"1. 算法基础与金融适配性","slug":"_1-算法基础与金融适配性","link":"#_1-算法基础与金融适配性","children":[]},{"level":3,"title":"2. 关键数学工具","slug":"_2-关键数学工具","link":"#_2-关键数学工具","children":[]}]},{"level":2,"title":"二、金融应用场景与Python实现","slug":"二、金融应用场景与python实现","link":"#二、金融应用场景与python实现","children":[{"level":3,"title":"1. 期权定价","slug":"_1-期权定价","link":"#_1-期权定价","children":[]},{"level":3,"title":"2. 风险价值（VaR）计算","slug":"_2-风险价值-var-计算","link":"#_2-风险价值-var-计算","children":[]},{"level":3,"title":"3. 投资组合优化","slug":"_3-投资组合优化","link":"#_3-投资组合优化","children":[]}]},{"level":2,"title":"三、效率提升关键技术","slug":"三、效率提升关键技术","link":"#三、效率提升关键技术","children":[{"level":3,"title":"1. 方差缩减方法","slug":"_1-方差缩减方法","link":"#_1-方差缩减方法","children":[]}]},{"level":2,"title":"四、应用注意事项","slug":"四、应用注意事项","link":"#四、应用注意事项","children":[]},{"level":2,"title":"五、总结与展望","slug":"五、总结与展望","link":"#五、总结与展望","children":[]}],"git":{},"filePathRelative":"tech/prj/5.md"}');export{i as comp,u as data};
