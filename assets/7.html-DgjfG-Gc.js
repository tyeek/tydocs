import{_ as s,c as a,a as e,o as t}from"./app-DofW4Ys_.js";const p={};function l(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="python-标准库-常用模块的使用" tabindex="-1"><a class="header-anchor" href="#python-标准库-常用模块的使用"><span>Python 标准库：常用模块的使用</span></a></h1><h2 id="一、os-模块" tabindex="-1"><a class="header-anchor" href="#一、os-模块"><span>一、<code>os</code> 模块</span></a></h2><h3 id="一-文件和目录操作" tabindex="-1"><a class="header-anchor" href="#一-文件和目录操作"><span>（一）文件和目录操作</span></a></h3><ol><li><strong>获取当前工作目录</strong></li></ol><ul><li><code>os.getcwd()</code> 用于返回当前 Python 脚本的工作目录。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">current_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>current_dir<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>改变当前工作目录</strong></li></ol><ul><li><code>os.chdir(path)</code> 可将当前工作目录更改为指定的 <code>path</code>。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token string">&#39;/new/directory/path&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>列出目录内容</strong></li></ol><ul><li><code>os.listdir(path=&#39;.&#39;)</code> 会返回指定目录下的所有文件和子目录的列表。若不指定 <code>path</code>，则默认为当前目录。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">file_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>file_list<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>创建目录</strong></li></ol><ul><li><code>os.mkdir(path)</code> 用于创建一个新目录，若目录已存在则会抛出 <code>FileExistsError</code> 异常。</li><li><code>os.makedirs(path, exist_ok=False)</code> 可以递归创建目录，<code>exist_ok</code> 为 <code>True</code> 时，若目录已存在不会报错。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">&#39;new_directory&#39;</span><span class="token punctuation">)</span></span>
<span class="line">os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string">&#39;new/directory/structure&#39;</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><strong>删除目录</strong></li></ol><ul><li><code>os.rmdir(path)</code> 用于删除空目录，若目录不为空则会抛出 <code>OSError</code> 异常。</li><li><code>shutil.rmtree(path)</code> 可以递归删除目录及其所有内容。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> shutil</span>
<span class="line">os<span class="token punctuation">.</span>rmdir<span class="token punctuation">(</span><span class="token string">&#39;empty_directory&#39;</span><span class="token punctuation">)</span></span>
<span class="line">shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span><span class="token string">&#39;non_empty_directory&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li><strong>重命名文件或目录</strong></li></ol><ul><li><code>os.rename(src, dst)</code> 可将 <code>src</code> 重命名为 <code>dst</code>。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">os<span class="token punctuation">.</span>rename<span class="token punctuation">(</span><span class="token string">&#39;old_name.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;new_name.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li><strong>删除文件</strong></li></ol><ul><li><code>os.remove(path)</code> 用于删除指定的文件。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;unwanted_file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-路径操作" tabindex="-1"><a class="header-anchor" href="#二-路径操作"><span>（二）路径操作</span></a></h3><ol><li><strong>拼接路径</strong></li></ol><ul><li><code>os.path.join(path1, path2, ...)</code> 可以将多个路径组件拼接成一个完整的路径，会根据不同操作系统使用正确的路径分隔符。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">full_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;parent_dir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;child_dir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>full_path<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>获取文件或目录的基本名称</strong></li></ol><ul><li><code>os.path.basename(path)</code> 会返回路径的最后一个组件。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span><span class="token string">&#39;/path/to/file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>file_name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>获取文件或目录的父目录</strong></li></ol><ul><li><code>os.path.dirname(path)</code> 会返回路径的目录部分。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line">dir_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span><span class="token string">&#39;/path/to/file.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>检查路径是否存在</strong></li></ol><ul><li><code>os.path.exists(path)</code> 用于检查指定的路径是否存在。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&#39;/path/to/somewhere&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;路径存在&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;路径不存在&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><strong>判断路径是文件还是目录</strong></li></ol><ul><li><code>os.path.isfile(path)</code> 用于判断路径是否为文件。</li><li><code>os.path.isdir(path)</code> 用于判断路径是否为目录。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span><span class="token string">&#39;/path/to/file.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;是文件&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span><span class="token string">&#39;/path/to/directory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;是目录&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、sys-模块" tabindex="-1"><a class="header-anchor" href="#二、sys-模块"><span>二、<code>sys</code> 模块</span></a></h2><h3 id="一-命令行参数" tabindex="-1"><a class="header-anchor" href="#一-命令行参数"><span>（一）命令行参数</span></a></h3><ul><li><code>sys.argv</code> 是一个包含命令行参数的列表，<code>sys.argv[0]</code> 是脚本的名称，后续元素是传递给脚本的参数。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;脚本名称: </span><span class="token interpolation"><span class="token punctuation">{</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;传递的参数:&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> arg <span class="token keyword">in</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-退出程序" tabindex="-1"><a class="header-anchor" href="#二-退出程序"><span>（二）退出程序</span></a></h3><ul><li><code>sys.exit([arg])</code> 用于退出 Python 解释器，<code>arg</code> 可以是一个整数，表示退出状态码，默认值为 <code>0</code> 表示正常退出。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"><span class="token keyword">if</span> some_condition<span class="token punctuation">:</span></span>
<span class="line">    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 异常退出</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-获取-python-解释器信息" tabindex="-1"><a class="header-anchor" href="#三-获取-python-解释器信息"><span>（三）获取 Python 解释器信息</span></a></h3><ul><li><code>sys.version</code> 会返回 Python 解释器的版本信息。</li><li><code>sys.platform</code> 会返回当前操作系统的平台名称。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Python 版本: </span><span class="token interpolation"><span class="token punctuation">{</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;操作系统平台: </span><span class="token interpolation"><span class="token punctuation">{</span>sys<span class="token punctuation">.</span>platform<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、datetime-模块" tabindex="-1"><a class="header-anchor" href="#三、datetime-模块"><span>三、<code>datetime</code> 模块</span></a></h2><h3 id="一-日期和时间类" tabindex="-1"><a class="header-anchor" href="#一-日期和时间类"><span>（一）日期和时间类</span></a></h3><ol><li><strong><code>datetime</code> 类</strong></li></ol><ul><li>用于表示日期和时间，可通过 <code>year</code>、<code>month</code>、<code>day</code>、<code>hour</code>、<code>minute</code>、<code>second</code> 等属性访问具体信息。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime</span>
<span class="line">now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;当前日期和时间: </span><span class="token interpolation"><span class="token punctuation">{</span>now<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;年份: </span><span class="token interpolation"><span class="token punctuation">{</span>now<span class="token punctuation">.</span>year<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;月份: </span><span class="token interpolation"><span class="token punctuation">{</span>now<span class="token punctuation">.</span>month<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong><code>date</code> 类</strong></li></ol><ul><li>用于表示日期，只包含年、月、日信息。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> date</span>
<span class="line">today <span class="token operator">=</span> date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;今天的日期: </span><span class="token interpolation"><span class="token punctuation">{</span>today<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong><code>time</code> 类</strong></li></ol><ul><li>用于表示时间，只包含时、分、秒、微秒信息。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> time</span>
<span class="line">t <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;时间: </span><span class="token interpolation"><span class="token punctuation">{</span>t<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-日期和时间的格式化" tabindex="-1"><a class="header-anchor" href="#二-日期和时间的格式化"><span>（二）日期和时间的格式化</span></a></h3><ul><li><code>strftime(format)</code> 方法可将日期和时间对象格式化为字符串，<code>format</code> 是格式化字符串。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime</span>
<span class="line">now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">formatted_date <span class="token operator">=</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>formatted_date<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-字符串解析为日期和时间" tabindex="-1"><a class="header-anchor" href="#三-字符串解析为日期和时间"><span>（三）字符串解析为日期和时间</span></a></h3><ul><li><code>strptime(date_string, format)</code> 方法可将字符串解析为日期和时间对象。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime</span>
<span class="line">date_str <span class="token operator">=</span> <span class="token string">&#39;2024-10-01 12:30:00&#39;</span></span>
<span class="line">dt <span class="token operator">=</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>date_str<span class="token punctuation">,</span> <span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、random-模块" tabindex="-1"><a class="header-anchor" href="#四、random-模块"><span>四、<code>random</code> 模块</span></a></h2><h3 id="一-生成随机数" tabindex="-1"><a class="header-anchor" href="#一-生成随机数"><span>（一）生成随机数</span></a></h3><ol><li><strong><code>random.random()</code></strong></li></ol><ul><li>生成一个介于 <code>0.0</code> 到 <code>1.0</code> 之间的随机浮点数。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> random</span>
<span class="line">random_float <span class="token operator">=</span> random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>random_float<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong><code>random.randint(a, b)</code></strong></li></ol><ul><li>生成一个介于 <code>a</code> 到 <code>b</code> 之间（包括 <code>a</code> 和 <code>b</code>）的随机整数。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> random</span>
<span class="line">random_int <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>random_int<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong><code>random.uniform(a, b)</code></strong></li></ol><ul><li>生成一个介于 <code>a</code> 到 <code>b</code> 之间的随机浮点数。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> random</span>
<span class="line">random_float_range <span class="token operator">=</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">2.5</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>random_float_range<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-随机选择元素" tabindex="-1"><a class="header-anchor" href="#二-随机选择元素"><span>（二）随机选择元素</span></a></h3><ol><li><strong><code>random.choice(seq)</code></strong></li></ol><ul><li>从非空序列 <code>seq</code> 中随机选择一个元素。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> random</span>
<span class="line">my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line">random_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>my_list<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>random_choice<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong><code>random.sample(population, k)</code></strong></li></ol><ul><li>从 <code>population</code> 序列中随机选择 <code>k</code> 个不重复的元素。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> random</span>
<span class="line">my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line">random_sample <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>my_list<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>random_sample<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-打乱序列顺序" tabindex="-1"><a class="header-anchor" href="#三-打乱序列顺序"><span>（三）打乱序列顺序</span></a></h3><ul><li><code>random.shuffle(x)</code> 用于将可变序列 <code>x</code> 中的元素随机打乱顺序。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> random</span>
<span class="line">my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line">random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>my_list<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、json-模块" tabindex="-1"><a class="header-anchor" href="#五、json-模块"><span>五、<code>json</code> 模块</span></a></h2><h3 id="一-json-数据编码" tabindex="-1"><a class="header-anchor" href="#一-json-数据编码"><span>（一）JSON 数据编码</span></a></h3><ul><li><code>json.dumps(obj, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)</code> 可将 Python 对象编码为 JSON 字符串。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> json</span>
<span class="line">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;New York&#39;</span><span class="token punctuation">}</span></span>
<span class="line">json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>json_str<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-json-数据解码" tabindex="-1"><a class="header-anchor" href="#二-json-数据解码"><span>（二）JSON 数据解码</span></a></h3><ul><li><code>json.loads(s, *, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)</code> 可将 JSON 字符串解码为 Python 对象。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> json</span>
<span class="line">json_str <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30, &quot;city&quot;: &quot;New York&quot;}&#39;</span></span>
<span class="line">data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-json-文件读写" tabindex="-1"><a class="header-anchor" href="#三-json-文件读写"><span>（三）JSON 文件读写</span></a></h3><ul><li><code>json.dump(obj, fp, *, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, default=None, sort_keys=False, **kw)</code> 可将 Python 对象写入 JSON 文件。</li><li><code>json.load(fp, *, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)</code> 可从 JSON 文件中读取数据并解码为 Python 对象。</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> json</span>
<span class="line">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;New York&#39;</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span> f<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    loaded_data <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>loaded_data<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,98)]))}const c=s(p,[["render",l]]),r=JSON.parse('{"path":"/tech/py/7.html","title":"Python 标准库：常用模块的使用","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、os 模块","slug":"一、os-模块","link":"#一、os-模块","children":[{"level":3,"title":"（一）文件和目录操作","slug":"一-文件和目录操作","link":"#一-文件和目录操作","children":[]},{"level":3,"title":"（二）路径操作","slug":"二-路径操作","link":"#二-路径操作","children":[]}]},{"level":2,"title":"二、sys 模块","slug":"二、sys-模块","link":"#二、sys-模块","children":[{"level":3,"title":"（一）命令行参数","slug":"一-命令行参数","link":"#一-命令行参数","children":[]},{"level":3,"title":"（二）退出程序","slug":"二-退出程序","link":"#二-退出程序","children":[]},{"level":3,"title":"（三）获取 Python 解释器信息","slug":"三-获取-python-解释器信息","link":"#三-获取-python-解释器信息","children":[]}]},{"level":2,"title":"三、datetime 模块","slug":"三、datetime-模块","link":"#三、datetime-模块","children":[{"level":3,"title":"（一）日期和时间类","slug":"一-日期和时间类","link":"#一-日期和时间类","children":[]},{"level":3,"title":"（二）日期和时间的格式化","slug":"二-日期和时间的格式化","link":"#二-日期和时间的格式化","children":[]},{"level":3,"title":"（三）字符串解析为日期和时间","slug":"三-字符串解析为日期和时间","link":"#三-字符串解析为日期和时间","children":[]}]},{"level":2,"title":"四、random 模块","slug":"四、random-模块","link":"#四、random-模块","children":[{"level":3,"title":"（一）生成随机数","slug":"一-生成随机数","link":"#一-生成随机数","children":[]},{"level":3,"title":"（二）随机选择元素","slug":"二-随机选择元素","link":"#二-随机选择元素","children":[]},{"level":3,"title":"（三）打乱序列顺序","slug":"三-打乱序列顺序","link":"#三-打乱序列顺序","children":[]}]},{"level":2,"title":"五、json 模块","slug":"五、json-模块","link":"#五、json-模块","children":[{"level":3,"title":"（一）JSON 数据编码","slug":"一-json-数据编码","link":"#一-json-数据编码","children":[]},{"level":3,"title":"（二）JSON 数据解码","slug":"二-json-数据解码","link":"#二-json-数据解码","children":[]},{"level":3,"title":"（三）JSON 文件读写","slug":"三-json-文件读写","link":"#三-json-文件读写","children":[]}]}],"git":{},"filePathRelative":"tech/py/7.md"}');export{c as comp,r as data};
