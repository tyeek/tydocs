import{_ as s,c as a,a as e,o as p}from"./app-BA05owTb.js";const t={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="python-文件操作-读写与处理" tabindex="-1"><a class="header-anchor" href="#python-文件操作-读写与处理"><span>Python 文件操作：读写与处理</span></a></h1><h2 id="一、文件打开与关闭" tabindex="-1"><a class="header-anchor" href="#一、文件打开与关闭"><span>一、文件打开与关闭</span></a></h2><h3 id="一-open-函数" tabindex="-1"><a class="header-anchor" href="#一-open-函数"><span>（一）<code>open()</code> 函数</span></a></h3><p>在 Python 里，<code>open()</code> 函数用于打开文件，其基本语法为：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">file_object <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> mode<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>file_path</code>：指的是文件的路径，可以是绝对路径，也可以是相对路径。</li><li><code>mode</code>：表示文件的打开模式，常见模式如下： <ul><li><code>&#39;r&#39;</code>：以只读模式打开文件，文件指针置于文件开头，若文件不存在则报错。</li><li><code>&#39;w&#39;</code>：以写入模式打开文件，若文件存在则清空内容，若文件不存在则创建新文件。</li><li><code>&#39;a&#39;</code>：以追加模式打开文件，文件指针置于文件末尾，若文件不存在则创建新文件。</li><li><code>&#39;b&#39;</code>：以二进制模式打开文件，可与其他模式组合，如 <code>&#39;rb&#39;</code> 表示以二进制只读模式打开。</li><li><code>&#39;+&#39;</code>：可读写模式，可与其他模式组合，如 <code>&#39;r+&#39;</code> 表示以读写模式打开文件。</li></ul></li></ul><h3 id="二-文件关闭" tabindex="-1"><a class="header-anchor" href="#二-文件关闭"><span>（二）文件关闭</span></a></h3><p>使用完文件后，需调用 <code>close()</code> 方法关闭文件，以释放系统资源。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 对文件进行操作</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可使用 <code>with</code> 语句来自动管理文件的打开和关闭，代码更简洁且安全：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 对文件进行操作</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"><span class="token comment"># 离开 with 语句块，文件自动关闭</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、文件读取" tabindex="-1"><a class="header-anchor" href="#二、文件读取"><span>二、文件读取</span></a></h2><h3 id="一-read-方法" tabindex="-1"><a class="header-anchor" href="#一-read-方法"><span>（一）<code>read()</code> 方法</span></a></h3><p><code>read()</code> 方法用于读取文件的全部内容或指定字节数的内容。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 读取文件全部内容</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 将文件指针移到文件开头</span></span>
<span class="line">    partial_content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 读取前 10 个字符</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>partial_content<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-readline-方法" tabindex="-1"><a class="header-anchor" href="#二-readline-方法"><span>（二）<code>readline()</code> 方法</span></a></h3><p><code>readline()</code> 方法用于逐行读取文件内容，每次调用会读取一行。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    line <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">while</span> line<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 去除行尾的换行符</span></span>
<span class="line">        line <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-readlines-方法" tabindex="-1"><a class="header-anchor" href="#三-readlines-方法"><span>（三）<code>readlines()</code> 方法</span></a></h3><p><code>readlines()</code> 方法会将文件的每一行作为一个元素，存储在列表中返回。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    lines <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、文件写入" tabindex="-1"><a class="header-anchor" href="#三、文件写入"><span>三、文件写入</span></a></h2><h3 id="一-write-方法" tabindex="-1"><a class="header-anchor" href="#一-write-方法"><span>（一）<code>write()</code> 方法</span></a></h3><p><code>write()</code> 方法用于向文件中写入字符串内容。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;Hello, World!\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;This is a test.&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-writelines-方法" tabindex="-1"><a class="header-anchor" href="#二-writelines-方法"><span>（二）<code>writelines()</code> 方法</span></a></h3><p><code>writelines()</code> 方法用于向文件中写入一个字符串列表，不会自动添加换行符。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Line 1\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Line 2\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Line 3&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>lines<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、文件追加" tabindex="-1"><a class="header-anchor" href="#四、文件追加"><span>四、文件追加</span></a></h2><p>使用 <code>&#39;a&#39;</code> 模式打开文件可实现内容追加。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\nThis is an appended line.&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、文件指针操作" tabindex="-1"><a class="header-anchor" href="#五、文件指针操作"><span>五、文件指针操作</span></a></h2><h3 id="一-seek-方法" tabindex="-1"><a class="header-anchor" href="#一-seek-方法"><span>（一）<code>seek()</code> 方法</span></a></h3><p><code>seek()</code> 方法用于移动文件指针的位置，其语法为：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span>offset<span class="token punctuation">,</span> whence<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>offset</code>：表示偏移量，正数表示向后移动，负数表示向前移动。</li><li><code>whence</code>：指定偏移的参考位置，取值如下： <ul><li><code>0</code>：从文件开头开始偏移（默认值）。</li><li><code>1</code>：从当前文件指针位置开始偏移。</li><li><code>2</code>：从文件末尾开始偏移。</li></ul></li></ul><p>示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 从文件开头向后移动 5 个字符</span></span>
<span class="line">    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-tell-方法" tabindex="-1"><a class="header-anchor" href="#二-tell-方法"><span>（二）<code>tell()</code> 方法</span></a></h3><p><code>tell()</code> 方法用于返回文件指针当前的位置。示例如下：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    position <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;当前文件指针位置: </span><span class="token interpolation"><span class="token punctuation">{</span>position<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">    position <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;读取 10 个字符后文件指针位置: </span><span class="token interpolation"><span class="token punctuation">{</span>position<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="六、文件处理实际应用" tabindex="-1"><a class="header-anchor" href="#六、文件处理实际应用"><span>六、文件处理实际应用</span></a></h2><h3 id="一-文件复制" tabindex="-1"><a class="header-anchor" href="#一-文件复制"><span>（一）文件复制</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">copy_file</span><span class="token punctuation">(</span>source_path<span class="token punctuation">,</span> destination_path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>source_path<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> source_file<span class="token punctuation">:</span></span>
<span class="line">        content <span class="token operator">=</span> source_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>destination_path<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> dest_file<span class="token punctuation">:</span></span>
<span class="line">        dest_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">copy_file<span class="token punctuation">(</span><span class="token string">&#39;source.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;destination.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-统计文件行数" tabindex="-1"><a class="header-anchor" href="#二-统计文件行数"><span>（二）统计文件行数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">count_lines</span><span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">        lines <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">line_count <span class="token operator">=</span> count_lines<span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;文件行数: </span><span class="token interpolation"><span class="token punctuation">{</span>line_count<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-文件内容替换" tabindex="-1"><a class="header-anchor" href="#三-文件内容替换"><span>（三）文件内容替换</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">replace_text</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> old_text<span class="token punctuation">,</span> new_text<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">        content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    new_content <span class="token operator">=</span> content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>old_text<span class="token punctuation">,</span> new_text<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>new_content<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">replace_text<span class="token punctuation">(</span><span class="token string">&#39;example.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;old&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;new&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48)]))}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/tech/py/6.html","title":"Python 文件操作：读写与处理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、文件打开与关闭","slug":"一、文件打开与关闭","link":"#一、文件打开与关闭","children":[{"level":3,"title":"（一）open() 函数","slug":"一-open-函数","link":"#一-open-函数","children":[]},{"level":3,"title":"（二）文件关闭","slug":"二-文件关闭","link":"#二-文件关闭","children":[]}]},{"level":2,"title":"二、文件读取","slug":"二、文件读取","link":"#二、文件读取","children":[{"level":3,"title":"（一）read() 方法","slug":"一-read-方法","link":"#一-read-方法","children":[]},{"level":3,"title":"（二）readline() 方法","slug":"二-readline-方法","link":"#二-readline-方法","children":[]},{"level":3,"title":"（三）readlines() 方法","slug":"三-readlines-方法","link":"#三-readlines-方法","children":[]}]},{"level":2,"title":"三、文件写入","slug":"三、文件写入","link":"#三、文件写入","children":[{"level":3,"title":"（一）write() 方法","slug":"一-write-方法","link":"#一-write-方法","children":[]},{"level":3,"title":"（二）writelines() 方法","slug":"二-writelines-方法","link":"#二-writelines-方法","children":[]}]},{"level":2,"title":"四、文件追加","slug":"四、文件追加","link":"#四、文件追加","children":[]},{"level":2,"title":"五、文件指针操作","slug":"五、文件指针操作","link":"#五、文件指针操作","children":[{"level":3,"title":"（一）seek() 方法","slug":"一-seek-方法","link":"#一-seek-方法","children":[]},{"level":3,"title":"（二）tell() 方法","slug":"二-tell-方法","link":"#二-tell-方法","children":[]}]},{"level":2,"title":"六、文件处理实际应用","slug":"六、文件处理实际应用","link":"#六、文件处理实际应用","children":[{"level":3,"title":"（一）文件复制","slug":"一-文件复制","link":"#一-文件复制","children":[]},{"level":3,"title":"（二）统计文件行数","slug":"二-统计文件行数","link":"#二-统计文件行数","children":[]},{"level":3,"title":"（三）文件内容替换","slug":"三-文件内容替换","link":"#三-文件内容替换","children":[]}]}],"git":{},"filePathRelative":"tech/py/6.md"}');export{o as comp,u as data};
