import{_ as s,c as a,a as e,o}from"./app-CClO5Xpl.js";const l={};function t(i,n){return o(),a("div",null,n[0]||(n[0]=[e(`<h1 id="python入门基础-环境搭建与基础语法" tabindex="-1"><a class="header-anchor" href="#python入门基础-环境搭建与基础语法"><span>Python入门基础：环境搭建与基础语法</span></a></h1><h2 id="一、环境搭建" tabindex="-1"><a class="header-anchor" href="#一、环境搭建"><span>一、环境搭建</span></a></h2><h3 id="一-安装python" tabindex="-1"><a class="header-anchor" href="#一-安装python"><span>（一）安装Python</span></a></h3><ol><li><strong>下载</strong>： <ul><li>访问Python官方网站（https://www.python.org/downloads/ ）。</li><li>根据操作系统（Windows、MacOS、Linux等）选择合适的Python版本进行下载。建议下载最新的稳定版本，截至目前，Python 3.x系列是主流，Python 2.x已停止更新维护。</li></ul></li><li><strong>安装步骤</strong>： <ul><li><strong>Windows系统</strong>： <ul><li>运行下载的安装程序，在安装向导中，勾选“Add Python to PATH”选项，这将把Python添加到系统环境变量中，方便在命令行中直接使用Python命令。</li><li>点击“Install Now”进行默认安装，也可以选择“Customize installation”来自定义安装路径等选项。</li></ul></li><li><strong>MacOS系统</strong>： <ul><li>运行下载的.pkg安装包，按照安装向导提示完成安装。安装完成后，Python会自动配置到系统路径中。</li></ul></li><li><strong>Linux系统</strong>： <ul><li>大多数Linux发行版默认安装了Python。可以通过命令<code>python3 --version</code>检查是否已安装Python 3。</li><li>如果需要安装特定版本的Python，可以使用包管理器。例如，在Ubuntu系统中，使用<code>sudo apt - get install python3.x</code>命令安装（将x替换为具体版本号）。</li></ul></li></ul></li></ol><h3 id="二-安装集成开发环境-ide" tabindex="-1"><a class="header-anchor" href="#二-安装集成开发环境-ide"><span>（二）安装集成开发环境（IDE）</span></a></h3><ol><li><strong>PyCharm</strong>： <ul><li><strong>下载</strong>：访问JetBrains官网（https://www.jetbrains.com/pycharm/download/ ），下载适合自己操作系统的PyCharm版本，有社区版（免费）和专业版（收费，功能更丰富）。</li><li><strong>安装</strong>： <ul><li><strong>Windows系统</strong>：运行下载的.exe文件，按照安装向导提示进行安装。</li><li><strong>MacOS系统</strong>：将下载的.dmg文件拖到“Applications”文件夹中进行安装。</li><li><strong>Linux系统</strong>：解压下载的压缩包，在解压后的目录中运行<code>bin/pycharm.sh</code>启动程序。</li></ul></li><li><strong>配置</strong>： <ul><li>首次启动PyCharm，选择项目保存的路径。</li><li>可以在“File”-&gt;“Settings”（Windows/Linux）或“PyCharm”-&gt;“Preferences”（MacOS）中配置Python解释器路径，确保PyCharm能找到安装的Python环境。</li></ul></li></ul></li><li><strong>Visual Studio Code</strong>： <ul><li><strong>下载</strong>：访问Visual Studio Code官网（https://code.visualstudio.com/download ）下载对应操作系统的安装包。</li><li><strong>安装</strong>：按照安装向导提示完成安装。</li><li><strong>配置</strong>： <ul><li>安装Python扩展。打开Visual Studio Code，点击左侧的扩展图标，搜索“Python”，然后点击安装。</li><li>在左下角选择Python解释器，通过点击齿轮图标选择合适的Python环境路径。</li></ul></li></ul></li><li><strong>IDLE</strong>： <ul><li>Python安装完成后，IDLE会自动安装在系统中。</li><li><strong>启动</strong>： <ul><li><strong>Windows系统</strong>：在开始菜单中搜索“IDLE”并打开。</li><li><strong>MacOS系统</strong>：在“/Applications/Python x.x”文件夹中找到IDLE并打开（x.x为Python版本号）。</li><li><strong>Linux系统</strong>：在终端中输入<code>idle3</code>（如果安装的是Python 3）启动。</li></ul></li></ul></li></ol><h2 id="二、基础语法" tabindex="-1"><a class="header-anchor" href="#二、基础语法"><span>二、基础语法</span></a></h2><h3 id="一-注释" tabindex="-1"><a class="header-anchor" href="#一-注释"><span>（一）注释</span></a></h3><ol><li><strong>单行注释</strong>：使用<code>#</code>符号，例如：</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 这是一个单行注释</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>多行注释</strong>：使用三个单引号<code>&#39;&#39;&#39;</code>或三个双引号<code>&quot;&quot;&quot;</code>，例如：</li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token triple-quoted-string string">&#39;&#39;&#39;</span>
<span class="line">这是一个</span>
<span class="line">多行注释的示例</span>
<span class="line">可以有多行内容</span>
<span class="line">&#39;&#39;&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">这也是一个</span>
<span class="line">多行注释</span>
<span class="line">&quot;&quot;&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Another line&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-变量与数据类型" tabindex="-1"><a class="header-anchor" href="#二-变量与数据类型"><span>（二）变量与数据类型</span></a></h3><ol><li><strong>变量定义</strong>： <ul><li>变量名必须以字母或下划线开头，后面可以跟字母、数字或下划线。例如：</li></ul></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;Alice&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">25</span></span>
<span class="line">pi <span class="token operator">=</span> <span class="token number">3.14159</span></span>
<span class="line">is_student <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>数据类型</strong>： <ul><li><strong>整数（int）</strong>：表示整数，例如：<code>10</code>，<code>-5</code>，<code>0</code>。</li><li><strong>浮点数（float）</strong>：表示带小数的数字，例如：<code>3.14</code>，<code>-0.5</code>，<code>1.0</code>。</li><li><strong>字符串（str）</strong>：用单引号或双引号括起来的文本，例如：<code>&#39;Hello&#39;</code>，<code>&quot;World&quot;</code>。</li><li><strong>布尔值（bool）</strong>：只有两个值<code>True</code>和<code>False</code>。</li><li><strong>获取数据类型</strong>：使用<code>type()</code>函数，例如：</li></ul></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class&#39;str&#39;&gt;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># &lt;class &#39;int&#39;&gt;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>pi<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># &lt;class &#39;float&#39;&gt;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>is_student<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;bool&#39;&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-运算符" tabindex="-1"><a class="header-anchor" href="#三-运算符"><span>（三）运算符</span></a></h3><ol><li><strong>算术运算符</strong>： <ul><li><code>+</code>（加法）：例如<code>3 + 5</code>结果为<code>8</code>。</li><li><code>-</code>（减法）：例如<code>7 - 2</code>结果为<code>5</code>。</li><li><code>*</code>（乘法）：例如<code>4 * 6</code>结果为<code>24</code>。</li><li><code>/</code>（除法）：例如<code>10 / 2</code>结果为<code>5.0</code>（注意，Python 3中除法结果为浮点数）。</li><li><code>//</code>（整除）：例如<code>10 // 3</code>结果为<code>3</code>（只取整数部分）。</li><li><code>%</code>（取模）：例如<code>10 % 3</code>结果为<code>1</code>（返回余数）。</li><li><code>**</code>（幂运算）：例如<code>2 ** 3</code>结果为<code>8</code>（即2的3次方）。</li></ul></li><li><strong>比较运算符</strong>： <ul><li><code>==</code>（等于）：例如<code>3 == 3</code>结果为<code>True</code>。</li><li><code>!=</code>（不等于）：例如<code>3!= 5</code>结果为<code>True</code>。</li><li><code>&gt;</code>（大于）：例如<code>5 &gt; 3</code>结果为<code>True</code>。</li><li><code>&lt;</code>（小于）：例如<code>2 &lt; 4</code>结果为<code>True</code>。</li><li><code>&gt;=</code>（大于等于）：例如<code>5 &gt;= 5</code>结果为<code>True</code>。</li><li><code>&lt;=</code>（小于等于）：例如<code>3 &lt;= 4</code>结果为<code>True</code>。</li></ul></li><li><strong>逻辑运算符</strong>： <ul><li><code>and</code>（与）：例如<code>(3 &gt; 2) and (5 &lt; 10)</code>结果为<code>True</code>，只有当两边表达式都为<code>True</code>时，结果才为<code>True</code>。</li><li><code>or</code>（或）：例如<code>(3 &gt; 5) or (2 &lt; 4)</code>结果为<code>True</code>，只要有一边表达式为<code>True</code>，结果就为<code>True</code>。</li><li><code>not</code>（非）：例如<code>not (3 &gt; 5)</code>结果为<code>True</code>，对表达式的结果取反。</li></ul></li><li><strong>赋值运算符</strong>： <ul><li><code>=</code>（赋值）：例如<code>a = 5</code>，将<code>5</code>赋值给变量<code>a</code>。</li><li><code>+=</code>（加等于）：例如<code>a = 3</code>，<code>a += 2</code>后，<code>a</code>的值变为<code>5</code>（相当于<code>a = a + 2</code>）。</li><li><code>-=</code>（减等于）：例如<code>a = 5</code>，<code>a -= 3</code>后，<code>a</code>的值变为<code>2</code>（相当于<code>a = a - 3</code>）。</li><li><code>*=</code>（乘等于）：例如<code>a = 2</code>，<code>a *= 4</code>后，<code>a</code>的值变为<code>8</code>（相当于<code>a = a * 4</code>）。</li><li><code>/=</code>（除等于）：例如<code>a = 10</code>，<code>a /= 2</code>后，<code>a</code>的值变为<code>5.0</code>（相当于<code>a = a / 2</code>）。</li><li><code>//=</code>（整除等于）：例如<code>a = 10</code>，<code>a //= 3</code>后，<code>a</code>的值变为<code>3</code>（相当于<code>a = a // 3</code>）。</li><li><code>%=</code>（取模等于）：例如<code>a = 10</code>，<code>a %= 3</code>后，<code>a</code>的值变为<code>1</code>（相当于<code>a = a % 3</code>）。</li><li><code>**=</code>（幂等于）：例如<code>a = 2</code>，<code>a **= 3</code>后，<code>a</code>的值变为<code>8</code>（相当于<code>a = a ** 3</code>）。</li></ul></li></ol><h3 id="四-输入与输出" tabindex="-1"><a class="header-anchor" href="#四-输入与输出"><span>（四）输入与输出</span></a></h3><ol><li><strong>输出</strong>： <ul><li>使用<code>print()</code>函数，例如：</li></ul></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;Bob&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">30</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;My name is&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token string">&quot;and I am&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> <span class="token string">&quot;years old.&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以使用字符串格式化输出，例如：</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;Charlie&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">35</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;My name is %s and I am %d years old.&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;My name is </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string"> and I am </span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string"> years old.&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment"># Python 3.6+支持的f - string格式化</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>输入</strong>： <ul><li>使用<code>input()</code>函数，例如：</li></ul></li></ol><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your name: &quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello,&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Please enter your age: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 注意，input()返回的是字符串，需要转换为整数类型</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;You are&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">,</span> <span class="token string">&quot;years old.&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)]))}const p=s(l,[["render",t]]),d=JSON.parse('{"path":"/tech/py/1.html","title":"Python入门基础：环境搭建与基础语法","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、环境搭建","slug":"一、环境搭建","link":"#一、环境搭建","children":[{"level":3,"title":"（一）安装Python","slug":"一-安装python","link":"#一-安装python","children":[]},{"level":3,"title":"（二）安装集成开发环境（IDE）","slug":"二-安装集成开发环境-ide","link":"#二-安装集成开发环境-ide","children":[]}]},{"level":2,"title":"二、基础语法","slug":"二、基础语法","link":"#二、基础语法","children":[{"level":3,"title":"（一）注释","slug":"一-注释","link":"#一-注释","children":[]},{"level":3,"title":"（二）变量与数据类型","slug":"二-变量与数据类型","link":"#二-变量与数据类型","children":[]},{"level":3,"title":"（三）运算符","slug":"三-运算符","link":"#三-运算符","children":[]},{"level":3,"title":"（四）输入与输出","slug":"四-输入与输出","link":"#四-输入与输出","children":[]}]}],"git":{},"filePathRelative":"tech/py/1.md"}');export{p as comp,d as data};
